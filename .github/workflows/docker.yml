name: Build and Deploy

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_type == 'tag' && 'production' || '' }}
    concurrency:
      group: ${{ github.ref_type == 'tag' && 'production' || github.run_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Set VERSION based on trigger type
        id: extract_version
        run: |
          if [[ $GITHUB_REF_TYPE == "tag" ]]; then
            # For tag triggers, use the tag name
            echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          else
            # For branch/commit triggers, use the commit hash
            echo "VERSION=${GITHUB_SHA}" >> $GITHUB_ENV
          fi
      - name: Set PLATFORM based on trigger type
        id: extract_platform
        if: github.event_name == 'pull_request'
        run: |
            echo "PLATFORM_OS=linux" >> $GITHUB_ENV
            echo "PLATFORM_ARCH=amd64" >> $GITHUB_ENV
      - name: Build and push Docker image
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            MIT_SERVER=${{ secrets.MIT_SERVER }}
            VERSION=${{ env.VERSION }}
            PLATFORM_OS=${{ env.PLATFORM_OS }}
            PLATFORM_ARCH=${{ env.PLATFORM_ARCH }}
      - if: github.ref_type == 'tag'
        name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.SSH_KEY}}
          port: ${{secrets.PORT}}
          script: |
            cd make-it-public
            git pull
            export MIT_VERSION=${{ env.VERSION }}
            docker compose pull
            export CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}
            export EMAIL=${{ secrets.EMAIL }}
            export DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}
            export AUTH_SALT=${{ secrets.AUTH_SALT }}
            export NETWORK_NAME=${{ env.MIT_NETWORK }}
            docker stack deploy -c docker-compose.yml makeitpublic
